name: Deployment
on:
  push:
    branches:
      - production
      - test
  workflow_dispatch:

concurrency:
  group: deployment-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  download-audio-data:
    name: Download audios data
    uses: ./.github/workflows/download-audios-data.yaml
    secrets: inherit

  deployment:
    name: Deploy to ${{ github.ref_name }}
    runs-on: ubuntu-latest
    needs: download-audio-data
    environment: ${{ github.ref_name }}

    steps:
      # 1. Updating Algolia index

      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.download-audio-data.outputs.artifact-name }}
          path: ${{ runner.temp }}

      # Pinning the commit SHA because this action does not maintain semver refs yet: https://github.com/algolia/setup-algolia-cli/issues/1#issuecomment-1465535303
      - uses: algolia/setup-algolia-cli@0af6968e098cc0526e22871fe46abe9a34e43e8d
      # Mimicing the behaviour of replace-all-objects: https://www.algolia.com/doc/api-reference/api-methods/replace-all-objects/
      - run: |
          algolia indices copy $INDEX $TEMP_INDEX --scope settings,synonyms,rules --confirm

          # https://www.algolia.com/doc/tools/cli/examples/recipes/#import-from-a-json-file
          jq -c '.[]' $AUDIOS_DATA_PATH | algolia objects import $TEMP_INDEX -F -

          algolia indices move $TEMP_INDEX $INDEX --confirm
        env:
          ALGOLIA_CLI_TELEMETRY: 0
          # CLI uses these two env variable for authentication: https://github.com/algolia/setup-algolia-cli/issues/4#issuecomment-1465172597
          ALGOLIA_APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
          ALGOLIA_ADMIN_API_KEY: ${{ secrets.ALGOLIA_ADMIN_API_KEY }}
          INDEX: ${{ vars.ALGOLIA_INDEX_AUDIOS }}
          TEMP_INDEX: ${{ vars.ALGOLIA_INDEX_AUDIOS }}_tmp
          AUDIOS_DATA_PATH: ${{ runner.temp }}/audios.json

      # 2. Deploying the website
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - run: cd frontend
      - run: npm ci
      - run: npm run lint
      - run: npm run check-js-typing
      - run: npm test --if-present
      - run: npm run build
        env:
          AUDIOS_DATA_PATH: ${{ runner.temp }}/audios.json
          ALGOLIA_APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
          ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
          ALGOLIA_INDEX_AUDIOS: ${{ vars.ALGOLIA_INDEX_AUDIOS }}
          ALGOLIA_INDEX_MEMORIES: ${{ vars.ALGOLIA_INDEX_MEMORIES}}
          STORAGE_BUCKET: ${{ vars.STORAGE_BUCKET}}
          DONATION_URL: ${{ vars.DONATION_URL}}
          FEEDBACK_FORM_AUDIOS: ${{ vars.FEEDBACK_FORM_AUDIOS}}
          FEEDBACK_FORM_MEMORIES: ${{ vars.FEEDBACK_FORM_MEMORIES }}

      - run: echo $SERVICE_ACCOUNT > ${{ runner.temp }}/service-account.json
        env:
          SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - run: curl -sL firebase.tools | analytics=false bash
      # Inspired by https://superuser.com/a/943466 and https://stackoverflow.com/a/74998363
      - run: |
          firebase hosting:channel:deploy ${{ github.head_ref }} --project ${{ vars.GCP_PROJECT_ID }}
          firebase hosting:sites:list --json --project ${{ vars.GCP_PROJECT_ID }} |\
          jq '.result.sites[] | select(.type == "DEFAULT_SITE) | .defaultUrl' --raw-output |\
          (echo -n "channel_url=" && cat) >> $GITHUB_OUTPUT
        id: deploy-production
        if: github.ref_name
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/service-account.json
